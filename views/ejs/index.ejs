<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
	integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
	crossorigin="anonymous">
	<title>socket io</title>
	<script src="./socket.io/socket.io.js"></script>
</head>
<style>
	.mainIcon {
		width: 45px;
		padding: 5px;
	}
</style>
<body>
	<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">
				<svg class="mainIcon Iconflex-shrink-0 fill-current" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 512 512" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""><title>Cube</title><path d="M440.9 136.3a4 4 0 000-6.91L288.16 40.65a64.14 64.14 0 00-64.33 0L71.12 129.39a4 4 0 000 6.91L254 243.88a4 4 0 004.06 0zM54 163.51a4 4 0 00-6 3.49v173.89a48 48 0 0023.84 41.39L234 479.51a4 4 0 006-3.46V274.3a4 4 0 00-2-3.46zM272 275v201a4 4 0 006 3.46l162.15-97.23A48 48 0 00464 340.89V167a4 4 0 00-6-3.45l-184 108a4 4 0 00-2 3.45z"></path></svg>
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
				data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false"
				aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarTogglerDemo02">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item">
						<a class="nav-link active" aria-current="page" href="/">Home</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/productos">Ver productos</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

	<div class="container">
	<h1 class="d-flex justify-content-center m-4">App con Socket.IO</h1>
		<span>
				<%- include('./partials/formulario'); %>
				<%- include('./partials/productos'); %>
				<!-- <%- include('./partials/productos2'); %> -->
		</span>
		<div id="verProductos"></div>
		<div id="mensajes">
			<%- include('./partials/mensajes'); %>

		</div>
	</div>
	<script>
		let socket=io();
	/* ############################ Enviar datos del Formulario ############################# */	
		const formProducts = document.getElementById("formProducts");
		formProducts.addEventListener("submit", (event) =>{
			event.preventDefault();
			const form = event.currentTarget;
			const formData = new FormData(form);
			const plainFormData = Object.fromEntries(formData.entries());
			// const formDataJsonString = JSON.stringify(plainFormData);
			console.log(plainFormData);
		// Enviar al Servidor los datos del formulario:
			socket.emit('fillP', plainFormData)

		});
	/* ############################ Recibir datos del Servidor ############################# */	
		let verProductos= document.getElementById('verProductos')
		let tablaProductos= document.getElementById('tablaProductos')
	// Escuchando el Servidor:
		socket.on('listenserver', data=>{
			console.log('info desde server', data);
			tablaProductos.innerHTML="";
			// Renderizo los datos en una tabla
			if (data.length) {

				console.log(data.length);
				for (const prod of data) {
					// console.log(prod);
					let nuevaFila = document.createElement("tr");

					nuevaFila.innerHTML= `
						<tr>
							<td><img class="img-thumbnail" style="height: 80px;" src=${prod.image} alt="">							</td>
							<td>${prod.name}</td>
							<td>${prod.price}</td>
						</tr>`	
					tablaProductos.appendChild(nuevaFila);
				}
			} else {
				verProductos.innerHTML = `<h4>No hay productos</h4>`;
			}
		})

	/* ############################ Enviar Mensajes ############################# */	
	const formMsg = document.getElementById("formMsg");
		formMsg.addEventListener("submit", (event) =>{
			event.preventDefault();
			elMensaje = {
				name: event.target[0].value,
				email: event.target[1].value
			}
			console.log(`elmensaje ${elMensaje}`);
			const form = event.currentTarget;
			const formData = new FormData(form);
			const plainFormData = Object.fromEntries(formData.entries());
			// const formDataJsonString = JSON.stringify(plainFormData);
			// console.log(JSON.stringify(plainFormData));
		// Enviar al Servidor los datos del formulario:
			socket.emit('userMsg', plainFormData)

		});

	// Mensajes
		let chat = document.getElementById("chat");
		socket.on("chat", data =>{
                	let contenido = ``;
                	console.log("Recibiendo..", data);
                	data.forEach(element => {
                		contenido += `<b>${element.email}:</b> ${element.mensaje} </br>`;
                	});
                	chat.innerHTML = contenido;
            	});

	button.addEventListener("click", e =>{
        let sendMessagge = {
                ...student,
                mensaje: input.value
            }
            socket.emit("mensaje", sendMessagge);
            input.value = "";
        })

	</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
crossorigin="anonymous"></script>
</body>
</html>